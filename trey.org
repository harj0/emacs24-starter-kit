#+TITLE: My personal settings
#+OPTIONS: toc:nil num:nil ^:nil
#+STARTUP: overview
#+STARTUP: hidestars
#+STARTUP: entitiespretty
# Time-stamp: <2014-10-26 18:56:30 trey>
This is my additions to the [[file:starter-kit.org][Emacs Starter Kit]].

* [ ] Org and org-capture stuff.                                   :Org:Mode:
Get it started, gotta learn how to do this code embedding.. Not sure why he didnt
use all caps on his code blocks.. Lets see if this will work.. I'll mostly just
copy him.
** Agenda and Diary files
   :PROPERTIES:
   :CUSTOM_ID: agenda
   :END:
#+BEGIN_SRC emacs-lisp
(setq diary-file "~/Org/Diary.org")
(setq org-agenda-files (quote ("~/Org/Tasks.org"
			       "~/Org/Toodledo.org"
                               "~/Org/Contacts.org"
                               "~/Org/Diary.org")))
#+END_SRC

** Load Starter-Kits ORG
#+BEGIN_SRC emacs-lisp
(starter-kit-load "org")
#+END_SRC
** Actually, first is org-bullets
#+BEGIN_SRC emacs-lisp
(require 'org-bullets)
(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
#+END_SRC

** Keywords for TODO
#+BEGIN_SRC emacs-lisp 
(setq org-todo-keywords '((sequence "TODO(t)" "DOC(a)"  "WAIT(w)" "GOAL(g)" "|" "DONE" "CANCELLED(c)")))
#+END_SRC
** Define my capture key bind
   :PROPERTIES:
   :CUSTOM_ID: org-capture
   :END:
#+begin_src emacs-lisp
(define-key global-map "\C-cc" 'org-capture)
#+end_src

** Set a couple templates
   :PROPERTIES:
   :CUSTOM_ID: initial-templates
   :END:
#+BEGIN_SRC emacs-lisp
  (setq org-capture-templates
        '(("t" "Todo" entry (file+headline "~/Org/Tasks.org" "Tasks")
               "* TODO %?\n  %i\n  %a")
          ("d" "Doctor Appointment" entry (file+headline "~/Org/Diary.org" "Doctors")
                "* DOC %? DEADLINE: %^T\n  %i\n %a" :empty-lines 1)
          ("j" "Journal" entry (file+datetree "~/Org/Journal.org")
               "* %?\n Entered on %U\n  %i\n  %a")
               ("n" "Notes" entry (file+datetree "~/Org/Notes.org")
               "* %? " :empty-lines 1)))
#+END_SRC
   
** Org-contacts and a Template for it.
  Opps.. I gotta go and get org-contacts.. Hope I can *FIND* it.. Since I deleted all my
configs.. Gonna try =M-x package-list-packages= first...
 
 :PROPERTIES:
 :CUSTOM_ID: Contacts-Template-Load-Custom
 :END:
#+BEGIN_SRC emacs-lisp
  (add-to-list 'load-path "/home/trey/.emacs.d/Custom/")
   (require 'org-contacts)
       (add-to-list 'org-capture-templates
                  '("c" "Contacts" entry (file "~/Org/Contacts.org")
                        "* %(org-contacts-template-name)
    :PROPERTIES:
    :NICKNAME: 
    :PHONE: %?
    :PHONE2:   
    :EMAIL:    
    :ICON:
    :NOTE:
    :ADDRESS:
    :SITE:
    :BIRTHDAY:
    :END:"))
#+END_SRC

** Toodledo !! contains my password, so dont like, uh..  yeah.

Also, i forgot that this needs http-post-simple.el. Had to install it again for some reason.
 :PROPERTIES:
   :CUSTOM_ID: Toodledo-PASSWORD
   :END:
#+BEGIN_SRC emacs-lisp
(require 'org-toodledo)
 (setq org-toodledo-userid "td54406eee26723")
 (setq org-toodledo-password "3y34mp1mp")

 ;; Useful key bindings for org-mode
 (add-hook 'org-mode-hook
        (lambda ()
          (local-unset-key "\C-o")
          (local-set-key "\C-od" 'org-toodledo-mark-task-deleted)
          (local-set-key "\C-os" 'org-toodledo-sync)
          )
        )
 (add-hook 'org-agenda-mode-hook
        (lambda ()
          (local-unset-key "\C-o")
          (local-set-key "\C-od" 'org-toodledo-agenda-mark-task-deleted)
          )
        )
#+END_SRC

* [X] Calfw has nothing to do with cows, apparently
Need to learn about these.. calfw has some Org functions, which is nice. Lets hope 
we can make gCals and orgCals have babies.
   :PROPERTIES:
   :CUSTOM_ID: Calendar-framework-gCal
   :END:
#+BEGIN_SRC emacs-lisp
(require 'calfw)
(require 'calfw-gcal)
#+END_SRC
 
* [X] Octomacs you say? well, ok, I'll try it. Also, gCal (new?) !
Configuring Octomacs will make interaction a little nicer.
Specifically, setting `octomacs-workdir-alist' and 
"  M-x customize-group RET octomacs RET"
   :PROPERTIES:
   :CUSTOM_ID: octo-gCal
   :END:
#+BEGIN_SRC emacs-lisp
 (require 'octomacs)
 (require 'org-gcal)
  #+END_SRC

* [X] Syntax highlighting in blocks
#+begin_src emacs-lisp
(setq org-src-fontify-natively t)
(setq org-fontify-emphasized-text t)
#+end_src

* [X] Remember Mode + TempzZz
Including this if for nothing else than to import them into org-capture
   :PROPERTIES:
   :CUSTOM_ID: remember-template
   :END:      
#+BEGIN_SRC emacs-lisp
(setq org-default-notes-file (concat org-directory "/Notes.org"))
 (setq org-remember-templates
   `(("Todo"    ?d "* TODO %?\n  %i\n" ,(concat org-directory "/remember-notes.org") bottom)
     ("Misc"    ?m "* %?\n  %i\n"      ,(concat org-directory "/Notes.org")   "Misc")
     ("iNfo"    ?N "* %?\n  %i\n"      ,(concat org-directory "/Notes.org")   "Information")
     ("Idea"    ?i "* %?\n  %i\n"      ,(concat org-directory "/Notes.org")   "Ideas")
     ("Journal" ?u "* %T %?\n\n  %i\n" ,(concat org-directory "/Journal.org") bottom)
     ("Blog"    ?b "* %T %? :BLOG:\n\n  %i\n" ,(concat org-directory "/Journal.org") bottom)
     ))
#+END_SRC

* [ ] Stuff that custom.el SHOULD do. Also, Theme(s)             :Initialize:
   :PROPERTIES:
   :CUSTOM_ID: multi-themes-it-seems
   :END:
#+BEGIN_SRC emacs-lisp
  (global-hl-line-mode 1)
  (load-theme 'smyx t)
  (setq initial-buffer-choice "~/.emacs.d/trey.org")
#+END_SRC






* Packages I've installed.

1) org-bullets 
2) [ ] org-contacts.el
3) org-toodledo
4) smart-mode-line
5) typing-practice
6) http-post-simple
7) [ ] calfw-gcal
8) calfw
9) bbdb 
10) bbdb-
11) color-theme-library 
12) auto-complete
13) [ ] octomacs
14)  org-gcal
15) 

* Lil template
:PROPERTIES:
:CUSTOM_ID: comm-temp
:END:
#+begin_src emacs-lisp
(add-to-list 'org-structure-template-alist '("C" "#+begin_comment\n?\n#+end_comment"))
#+end_src



 
** 
** 
*** 
**** 
***** 
****** 
**** 


[file:starterkit-org.org]
